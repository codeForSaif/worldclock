/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FindCityPanelGeoname.java
 *
 * Created on 7 juin 2009, 22:29:56
 */
package lh.worldclock.editor;

import java.awt.Cursor;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.table.AbstractTableModel;
import lh.worldclock.config.schema.City;
import lh.worldclock.geonames.schema.Geonames.Geoname;
import lh.worldclock.geonames4lhwc.GeonamesWSWrapper;

/**
 *
 * @author Ludovic
 */
public class FindCityPanelGeoname extends javax.swing.JPanel
{
  private static final List<Geoname> EMPTY_LIST = Collections.emptyList();

  private class GeonamesTableModel extends AbstractTableModel
  {

    List<Geoname> geonames = new ArrayList<Geoname>();

    private final String[] columns = new String[]
    {
      "Name", "Country", "Latitude", "Longitude", "Timezone"
    };

    public void update(List<Geoname> list)
    {
      geonames.clear();
      geonames.addAll(list);
      fireTableDataChanged();
    }
    
    public Geoname getGeonameAt(int row)
    {
      return geonames.get(row);
    }

    @Override
    public int getRowCount()
    {
      return geonames.size();
    }

    @Override
    public int getColumnCount()
    {
      return columns.length;
    }

    @Override
    public Object getValueAt(int rowIndex, int columnIndex)
    {
      Geoname geoname = geonames.get(rowIndex);
      switch (columnIndex)
      {
        //{"Name", "Country", "Latitude", "Longitude", "Timezone"};
        case 0: // name
          return geoname.getName();
        case 1: // country
          return geoname.getCountryName();
        case 2: // latitude
          return geoname.getLat();
        case 3: // longitude
          return geoname.getLng();
        case 4: // timezone
          return geoname.getTimezone();
      }
      return null;
    }

    @Override
    public String getColumnName(int column)
    {
      return columns[column];
    }

  }

  /** Creates new form FindCityPanelGeoname */
  public FindCityPanelGeoname()
  {
    initComponents();
    tblGeonames.setModel(model);
    tblGeonames.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  }
  
  public void resetWith(City city)
  {
    model.update(EMPTY_LIST);
    if (city != null)
    {
      tfCity.setText(city.getName());
    }
  }
  
  public City getSelectedCity()
  {
    City city = null;
    int selectedRow = tblGeonames.getSelectedRow();
    if (selectedRow > -1)
    {
      Geoname geoname = model.getGeonameAt(selectedRow);
      city = new City();
      city.setName(geoname.getName());
      city.setLat(geoname.getLat());
      city.setLong(geoname.getLng());
      city.setTimezone(geoname.getTimezone());
    }
    return city;
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    tfCity = new javax.swing.JTextField();
    jLabel2 = new javax.swing.JLabel();
    spMax = new javax.swing.JSpinner();
    jScrollPane1 = new javax.swing.JScrollPane();
    tblGeonames = new javax.swing.JTable();
    btnFind = new javax.swing.JButton();

    setName("Form"); // NOI18N

    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(lh.worldclock.editor.EditorApp.class).getContext().getResourceMap(FindCityPanelGeoname.class);
    jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
    jLabel1.setName("jLabel1"); // NOI18N

    tfCity.setText(resourceMap.getString("tfCity.text")); // NOI18N
    tfCity.setName("tfCity"); // NOI18N
    tfCity.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfCityActionPerformed(evt);
      }
    });

    jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
    jLabel2.setName("jLabel2"); // NOI18N

    spMax.setModel(new javax.swing.SpinnerNumberModel(10, 1, 100, 1));
    spMax.setName("spMax"); // NOI18N

    jScrollPane1.setName("jScrollPane1"); // NOI18N

    tblGeonames.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String [] {
        "Title 1", "Title 2", "Title 3", "Title 4"
      }
    ));
    tblGeonames.setName("tblGeonames"); // NOI18N
    jScrollPane1.setViewportView(tblGeonames);

    btnFind.setText(resourceMap.getString("btnFind.text")); // NOI18N
    btnFind.setName("btnFind"); // NOI18N
    btnFind.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnFindActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
          .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(tfCity, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(btnFind))
          .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(spMax, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(tfCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(btnFind))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(spMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnFindActionPerformed
    {//GEN-HEADEREND:event_btnFindActionPerformed
      // TODO add your handling code here:
      setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
      SwingUtilities.invokeLater(new Runnable()
      {

        @Override
        public void run()
        {
          model.update(GeonamesWSWrapper.getGeonames(tfCity.getText(), (Integer) spMax.getValue()));
          setCursor(Cursor.getDefaultCursor());
        }
      });

    }//GEN-LAST:event_btnFindActionPerformed

    private void tfCityActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tfCityActionPerformed
    {//GEN-HEADEREND:event_tfCityActionPerformed
      // TODO add your handling code here:
      SwingUtilities.invokeLater(new Runnable()
      {

        @Override
        public void run()
        {
          btnFind.doClick();
        }
      });

    }//GEN-LAST:event_tfCityActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnFind;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JSpinner spMax;
  private javax.swing.JTable tblGeonames;
  private javax.swing.JTextField tfCity;
  // End of variables declaration//GEN-END:variables

  private final GeonamesTableModel model = new GeonamesTableModel();
}
